stages:          # List of stages for jobs, and their order of execution
  - dev-compile
  - dev-build
  # - SIT
  # - UAT

build-job:       # This job runs in the build stage, which runs first.
  stage: dev-compile
  variables: 
    CI: "false"
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - .npm/
  before_script:
    - npm ci --cache .npm --prefer-offline
  script:
    - echo "Compiling the code...!"
    - npm run build --if-present
    - echo "Compile completed."
  allow_failure: false
  artifacts:
    paths:
      - "./build"
    when: on_success

docker-job:   # This job runs in the test stage.
  stage: dev-build    # It only starts when the job in the build stage completes successfully.
  image: docker:20.10.16
  variables: 
    DOCKER_HOST: "tcp://docker:2376"
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  services:
    - docker:20.10.16-dind
  before_script:
    - echo "Waiting for docker to initialise..."
    - i=0; while [ "$i" -lt 12 ]; do docker info && break; sleep 5; i=$(( i + 1 )) ; done
    - echo "Docker running"
  dependencies:
    - "build-job"
  script:
    - echo "Docker build and push..."
    - docker build -t registry.datainn.io/datainn/simpleaccounts/simpleaccounts-frontend .
    - docker login registry.datainn.io --username $SIMPLEACCOUNTS_FRONTEND_REGISTRY_USER --password $SIMPLEACCOUNTS_FRONTEND_REGISTRY_PASS
    - docker push registry.datainn.io/datainn/simpleaccounts/simpleaccounts-frontend:latest
    - echo "Docker image pushed"
  allow_failure: false
  rules:
    - if: $CI_PROJECT_NAMESPACE == 'datainn/simpleaccounts' && $CI_COMMIT_BRANCH == 'develop'
      when: always
    - when: never

# deploy-job:      # This job runs in the deploy stage.
#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   script:
#     - echo "Deploying application..."
#     - echo "Application successfully deployed."
