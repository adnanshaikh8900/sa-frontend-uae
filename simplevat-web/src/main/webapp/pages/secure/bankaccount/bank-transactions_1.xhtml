<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:si="http://java.sun.com/jsf/composite/ccomponent"
                template="/WEB-INF/templates/template.xhtml">

    <ui:define name="title">#{messages.bank_accounts}</ui:define>

    <ui:define name="content">
        <style>
            .ui-widget-content .ui-inputfield {
                padding-right: 24em;
            }
            .label{
                font-size: 75%;
            }
            /*            .eligibility-EXPLAINED {
                            width: 60px;
                            color: #5cb85c;
                        }
                        .eligibility-UNEXPLAINED {
                            color: #d9534f;
                            width: 50px;
                        }
                        .eligibility-PARTIALLY-EXPLAINED {
                            width: 60px;
                            color: #f98e03;
                        }*/


            .ui-row-toggler{
                display: none !important;
            }
            .hideTransaction-false{
                visibility: hidden;
                display: none;
            }
        </style>

        <h:form id="transactionForm">
            <div class="ui-fluid tree">
                <si:cdataPanel newAction= "#{transactionController.createTransaction()}" importAction="#{transactionController.importTransaction()}">
                    <f:facet name="left">
                        <p:commandButton value="All (#{transactionListControllerDemo.totalTransactions})" styleClass="AquaButton" action="#{transactionListControllerDemo.allTransactions()}" update="#{p:component('transactionsTable')}"/>
                        <p:commandButton icon="transtype-EXPLAINED" value="Explained (#{transactionListControllerDemo.totalExplained})" styleClass="AquaButton" action="#{transactionListControllerDemo.allExplainedTransactions()}" update="#{p:component('transactionsTable')}"/>
                        <p:commandButton icon="transtype-UNEXPLAINED" value="Unexplained (#{transactionListControllerDemo.totalUnExplained})" styleClass="AquaButton" action="#{transactionListControllerDemo.allUnExplainedTransactions()}" update="#{p:component('transactionsTable')}"/>
                        <p:commandButton icon="transtype-PARTIALLY-EXPLAINED" value="Partially Explained (#{transactionListControllerDemo.totalPartiallyExplained})" styleClass="AquaButton" action="#{transactionListControllerDemo.allPartiallyExplainedTransactions()}" update="#{p:component('transactionsTable')}"/>
                    </f:facet>
                    <!--rowStyleClass="hideTransaction-#{transaction.parent} child-#{transaction.parentTransaction}"-->
                    <!--<p:remoteCommand name="updateRemotePaginator"  oncomplete="updatePaginator(event)" />-->
                    <p:remoteCommand name="updateTableData" update="@form" oncomplete="updatePaginator()" />
                    <p:dataTable var="transaction"
                                 value="#{transactionListControllerDemo.transactionViewLazyModel}"
                                 rowIndexVar="index" 
                                 lazy="true" 
                                 widgetVar="transactiondt" styleClass="transactiondt"
                                 rowStyleClass="hideTransaction-#{transaction.parent} child-#{transaction.parentTransaction}"
                                 rowExpandMode="single" rows ="#{transactionListControllerDemo.transactionViewLazyModel.calculateRows}"     
                                 rowKey="#{transaction.transactionId}"
                                 paginator="true" 
                                 paginatorTemplate="{CurrentPageReport}  {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {TableHeader}"
                                 id="transactionsTable">
                        <p:ajax event="page" listener="#{transactionListControllerDemo.refreshTableDataonPageChange}" update="@(.hiddenText) @(.tableCustomHeader)" oncomplete="updateTableData()"/>
                        <!--<f:event type="org.primefaces.event.data.PostPageEvent" listener="#{transactionListControllerDemo.refreshTableDataonPageChange}" oncomplete="updatePaginator()"  update="@(.hiddenText) @(.tableCustomHeader)"/>-->
                        <f:facet name="{TableHeader}">
                            <p:outputLabel styleClass="tableCustomHeader" value="#{transactionListControllerDemo.bankAccount.bankAccountName}" />
                        </f:facet>

                        <p:column width="30" style="text-align: center" styleClass="updateColumn">
                            <h:panelGroup layout="block">
                                <h:panelGroup layout="block" style="display:block" styleClass="label transtype-#{transaction.explanationStatusName}#{transaction.parent ? '': '-child'}" >
                                    <h:outputText value=" "/>
                                </h:panelGroup>
                            </h:panelGroup>
                        </p:column>

                        <p:column headerText="#{messages.date}" styleClass="updateColumn" width="80" sortBy="#{transaction.transactionDate.time}" filterMatchMode="contains" filterBy="#{transaction.transactionDate.time}">
                            <h:outputText value="#{transaction.transactionDate.time}" >
                                <f:convertDateTime pattern="dd/MM/yyyy" />
                            </h:outputText>
                        </p:column>

                        <p:column headerText="#{messages.description}" styleClass="updateColumn" filterMatchMode="contains" filterBy="#{transaction.transactionDescription}">
                            <p:outputLabel value="#{transaction.transactionDescription}"/><br/>
                            <h:panelGroup rendered="#{transaction.explanationStatusCode != 2 and transaction.suggestedTransactionString.length() > 0}" >
                                <p:outputLabel value="#{transaction.suggestedTransactionString}" style="font-size: x-small;color:#ff0000" /> 
                                <p:spacer width="10px"/>
                                <p:commandLink value=" Accept " action="#{transactionListControllerDemo.acceptSuggestion(transaction)}" update="transactionsTable" style="font-size: x-small; font-weight: bold;color:#14ad3c"/>
                                <p:outputLabel value="/" />
                                <p:commandLink value=" Edit" action="#{transactionListControllerDemo.expandToggler(btnBinding.clientId,transaction)}" update="transactionsTable" style="font-size: x-small; font-weight: bold;color:#ff0000"/>
                            </h:panelGroup>
                            <h:panelGroup rendered="#{transaction.explanationStatusCode == 2}" >
                                <p:outputLabel value="#{transaction.suggestedTransactionString}" style="font-size: x-small;color:#14ad3c" /> 
                                <p:spacer width="10px"/>
                                <p:commandLink value=" More" action="#{transactionListControllerDemo.expandToggler(btnBinding.clientId,transaction)}" update="transactionsTable" style="font-size: x-small; font-weight: bold;color:#14ad3c" />
                            </h:panelGroup>
                        </p:column>

                        <p:column headerText="#{messages.credit}" sortBy="#{transaction.transactionAmount}" width="110" styleClass="amount updateColumn" filterMatchMode="contains" filterBy="#{transaction.transactionAmount}">
                            <h:outputText value="#{transaction.transactionAmount}" rendered="#{transaction.debitCreditFlag.toString() eq 'C'}" >
                                <f:convertNumber type="currency" currencySymbol=""/>
                            </h:outputText>
                        </p:column>

                        <p:column headerText="#{messages.debit}" sortBy="#{transaction.transactionAmount}" width="110" styleClass="amount updateColumn" filterMatchMode="contains" filterBy="#{transaction.transactionAmount}">
                            <h:outputText value="#{transaction.transactionAmount}" rendered="#{transaction.debitCreditFlag.toString() eq 'D'}" >
                                <f:convertNumber type="currency" currencySymbol=""/>
                            </h:outputText>
                        </p:column>

                        <p:column headerText="#{messages.current_balance}" styleClass="amount updateColumn" width="110" filterMatchMode="contains" filterBy="#{transaction.currentBalance}">
                            <h:outputText value="#{transaction.currentBalance}" >
                                <f:convertNumber type="currency" currencySymbol=""/>
                            </h:outputText>
                        </p:column>

                        <p:column headerText="Action" width="130">
                            <p:rowToggler rendered="#{transaction.childTransactionList.size() == 0}"/>
                            <p:commandButton rendered="#{transaction.childTransactionList.size() == 0}" icon="#{transaction.expandIcon ? 'ui-icon-expand-less' : 'ui-icon-expand-more'}" styleClass="AquaButton" onclick="expandCollapseNochild(event, #{transaction.parent},#{transaction.expandIcon},#{transaction.parentTransaction})" action="#{transactionListControllerDemo.expandCollapse(btnBinding.clientId, transaction)}"  binding="#{btnBinding}" update="@(.updateColumn) @(.AquaButton)" id="collapseExpandBtn">
                            </p:commandButton>
                            <p:commandButton rendered="#{transaction.childTransactionList.size() > 0}" icon="#{transaction.expandIcon ? 'ui-icon-expand-less' : 'ui-icon-expand-more'}" styleClass="AquaButton" onclick="expandCollapse(event, #{transaction.transactionId},#{transaction.expandIcon})" action="#{transactionListControllerDemo.expandCollapse(btnBinding1.clientId,transaction)}" binding="#{btnBinding1}" update="@(.updateColumn) @(.AquaButton)" id="collapseExpandChildBtn">
                            </p:commandButton>
                            <p:commandButton icon="ui-icon-edit" styleClass="AquaButton" action="#{transactionListControllerDemo.editTransection}"  rendered="#{transaction.parentTransaction == null}">
                                <f:setPropertyActionListener value="#{transaction}" target="#{transactionListControllerDemo.selectedTransactionViewModel}" />
                            </p:commandButton>

                            <p:commandButton icon="ui-icon-delete" styleClass="AquaButton" action="#{transactionListControllerDemo.deleteTransaction}" update="transactionsTable">
                                <f:setPropertyActionListener value="#{transaction}" target="#{transactionListControllerDemo.selectedTransactionViewModel}" />
                                <p:confirm header="#{messages.delete}" message="#{messages.are_you_sure_want_to_delete}" icon="ui-icon-alert" />
                            </p:commandButton>

                        </p:column>

                        <p:rowExpansion>
                            <ui:include src="child-transaction_1.xhtml">
                                <ui:param name="transaction" value="#{transaction}"/>
                                <ui:param name="rowIdx" value="#{rowIdx}"/>
                                <ui:param name="btnBinding" value="#{btnBinding}"/>
                            </ui:include>
                        </p:rowExpansion>
                    </p:dataTable>
                </si:cdataPanel>
            </div>
            <p:inputText style="" styleClass="hiddenText" id="rowsHdn" value="#{transactionListControllerDemo.transactionViewLazyModel.calculateRows}"/>
            <p:inputText id="pageCountHdn" styleClass="hiddenText" value="#{transactionListControllerDemo.transactionViewLazyModel.pageCount}"/>
            <p:outputLabel  styleClass="hiddenText"  value="#{transactionListControllerDemo.transactionViewLazyModel.data.size()}"/>

        </h:form>
        <ui:include src="import-transaction-popup.xhtml"/>
        <script type="text/javascript">
            function expandCollapse(event, styleClass, isExpandIcon) {
                if (isExpandIcon) {
                    $(".hideTransaction-false").css('visibility', 'hidden');
                    $(".hideTransaction-false").css('display', 'none');
                    array1 = $(".ui-icon-expand-less").parent();
                    $.each(array1, function (key, value) {
                        var id = value.id;
                        if (id.indexOf("collapseExpandBtn") > 0) {
                            $(value).parent().find('.ui-row-toggler').trigger('click');
                        }
                    });
                } else {
                    $(".hideTransaction-false").css('visibility', 'hidden');
                    $(".hideTransaction-false").css('display', 'none');
                    $(".child-" + styleClass).css('visibility', 'visible');
                    $(".child-" + styleClass).css('display', 'table-row');
                    array1 = $(".ui-icon-expand-less").parent();
                    $.each(array1, function (key, value) {
                        var id = value.id;
                        if (id.indexOf("collapseExpandBtn") > 0) {
                            $(value).parent().find('.ui-row-toggler').trigger('click');
                        }
                    });
                }
                event.preventDefault();
            }
            function expandCollapseNochild(event, isParent, isExpandIcon, styleClass) {
                if ([isParent][~isExpandIcon]) {
                    $(".hideTransaction-false").css('visibility', 'hidden');
                    $(".hideTransaction-false").css('display', 'none');
                } else {
                    $(".hideTransaction-false").css('visibility', 'hidden');
                    $(".hideTransaction-false").css('display', 'none');
                    $(".child-" + styleClass).css('visibility', 'visible');
                    $(".child-" + styleClass).css('display', 'table-row');
                }
                array1 = $(".ui-icon-expand-less").parent();
                $.each(array1, function (key, value) {
                    var id = value.id;
                    if (id.indexOf("collapseExpandBtn") > 0) {
                        $(value).parent().find('.ui-row-toggler').trigger('click');
                    }
                });
                event.preventDefault();
            }
            function updatePaginator() {
//                updateTableData();
                var paginator = PF('transactiondt').paginator;
//                 var rows = PF('transactiondt').rows;
                console.log(paginator.cfg.rows);
                console.log($("#transactionForm\\:rowsHdn").val());

                paginator.cfg.rows = $("#transactionForm\\:rowsHdn").val();
//                paginator.cfg.pageCount = 3;//$("#transactionForm\\:pageCountHdn").val();
//                paginator().setPage(paginator.getPage());
//                paginator.cfg.rowCount = args.totalRecords;
//                paginator.cfg.rowCount = args.totalRecords;
//                console.log(paginator.cfg.pageCount);
                paginator.cfg.pageCount = 6;
                console.log("Rows :" + paginator.cfg.rows);
                console.log("pageCount :" + paginator.cfg.pageCount);
                console.log("rowCount :" + paginator.cfg.rowCount);
                paginator.updateUI();
//                updateTableData();

//                 paginator.cfg.pageCount = 6;
//                 paginator.updateUI();
                console.log("Rows :" + paginator.cfg.rows);
                console.log("pageCount :" + paginator.cfg.pageCount);
                console.log("rowCount :" + paginator.cfg.rowCount);
//                  event.preventDefault();
            }
            $(document).ready(function () {
                updatePaginator();
            });
        </script>
    </ui:define>

</ui:composition>