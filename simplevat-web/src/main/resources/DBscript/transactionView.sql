CREATE VIEW transactionview AS 
select t.TRANSACTION_ID AS TRANSACTION_ID,t.CURRENT_BALANCE AS CURRENT_BALANCE,t.DEBIT_CREDIT_FLAG AS DEBIT_CREDIT_FLAG,t.ENTRY_TYPE AS ENTRY_TYPE,t.REFERENCE_ID AS REFERENCE_ID,t.REFERENCE_TYPE AS REFERENCE_TYPE,t.TRANSACTION_AMOUNT AS TRANSACTION_AMOUNT,t.TRANSACTION_DATE AS TRANSACTION_DATE,t.TRANSACTION_DESCRIPTION AS TRANSACTION_DESCRIPTION,t.BANK_ACCOUNT_ID AS BANK_ACCOUNT_ID,t.PARENT_TRANSACTION AS PARENT_TRANSACTION,
(select tc.TRANSACTION_CATEGORY_NAME from transaction_category tc where tc.DELETE_FLAG = 0 and t.EXPLAINED_TRANSACTION_CATEGORY_CODE = tc.TRANSACTION_CATEGORY_ID) AS TRANSACTION_CATEGORY_NAME,
(select tt.TRANSACTION_TYPE_NAME from transaction_type tt where tt.DELETE_FLAG = 0 and t.TRANSACTION_TYPE_CODE = tt.TRANSACTION_TYPE_CODE) AS TRANSACTION_TYPE_NAME,
(select es.EXPLANATION_STATUS_CODE from explanation_status es where es.DELETE_FLAG = 0 and t.EXPLANATION_STATUS_CODE = es.EXPLANATION_STATUS_CODE) AS EXPLANATION_STATUS_CODE,
(select es.EXPLANATION_STATUS_NAME from explanation_status es where es.DELETE_FLAG = 0 and t.EXPLANATION_STATUS_CODE = es.EXPLANATION_STATUS_CODE) AS EXPLANATION_STATUS_NAME,
(select i.INVOICE_REFERENCE_NUMBER from invoice AS i where i.DELETE_FLAG = 0 and t.REFERENCE_ID = i.INVOICE_ID) AS REFERENCE_NAME,
(select i.DUE_AMOUNT from invoice AS i where i.DELETE_FLAG = 0 and t.REFERENCE_ID = i.INVOICE_ID) AS DUE_AMOUNT,
(select c.FIRST_NAME from invoice AS i JOIN contact AS c ON c.CONTACT_ID=i.CONTACT_ID where i.DELETE_FLAG = 0 and t.REFERENCE_ID = i.INVOICE_ID) AS CONTACT_NAME,
(select i.INVOICE_DUE_DATE from invoice AS i where i.DELETE_FLAG = 0 and t.REFERENCE_ID = i.INVOICE_ID) AS DUE_ON,
(select cr.CURRENCY_SYMBOL from currency AS cr JOIN bank_account AS ba ON ba.BANK_ACCOUNT_CURRENCY_CODE = cr.CURRENCY_CODE WHERE t.BANK_ACCOUNT_ID = ba.BANK_ACCOUNT_ID) AS CURRENCY_SYMBOL
from transacton t where t.DELETE_FLAG = 0 and t.REFERENCE_TYPE = 1
union
select t.TRANSACTION_ID AS TRANSACTION_ID,t.CURRENT_BALANCE AS CURRENT_BALANCE,t.DEBIT_CREDIT_FLAG AS DEBIT_CREDIT_FLAG,t.ENTRY_TYPE AS ENTRY_TYPE,t.REFERENCE_ID AS REFERENCE_ID,t.REFERENCE_TYPE AS REFERENCE_TYPE,t.TRANSACTION_AMOUNT AS TRANSACTION_AMOUNT,t.TRANSACTION_DATE AS TRANSACTION_DATE,t.TRANSACTION_DESCRIPTION AS TRANSACTION_DESCRIPTION,t.BANK_ACCOUNT_ID AS BANK_ACCOUNT_ID,t.PARENT_TRANSACTION AS PARENT_TRANSACTION,
(select tc.TRANSACTION_CATEGORY_NAME from transaction_category tc where tc.DELETE_FLAG = 0 and t.EXPLAINED_TRANSACTION_CATEGORY_CODE = tc.TRANSACTION_CATEGORY_ID) AS TRANSACTION_CATEGORY_NAME,
(select tt.TRANSACTION_TYPE_NAME from transaction_type tt where tt.DELETE_FLAG = 0 and t.TRANSACTION_TYPE_CODE = tt.TRANSACTION_TYPE_CODE) AS TRANSACTION_TYPE_NAME,
(select es.EXPLANATION_STATUS_CODE from explanation_status es where es.DELETE_FLAG = 0 and t.EXPLANATION_STATUS_CODE = es.EXPLANATION_STATUS_CODE) AS EXPLANATION_STATUS_CODE,
(select es.EXPLANATION_STATUS_NAME from explanation_status es where es.DELETE_FLAG = 0 and t.EXPLANATION_STATUS_CODE = es.EXPLANATION_STATUS_CODE) AS EXPLANATION_STATUS_NAME,
(select p.RECEIPT_NUMBER from purchase AS p where p.DELETE_FLAG = 0 and t.REFERENCE_ID = p.PURCHASE_ID ) AS REFERENCE_NAME,
(select p.PURCHASE_DUE_AMOUNT from purchase AS p where p.DELETE_FLAG = 0 and t.REFERENCE_ID = p.PURCHASE_ID) AS DUE_AMOUNT,
(select c.FIRST_NAME from purchase AS p JOIN contact AS c ON c.CONTACT_ID = p.CONTACT_ID where p.DELETE_FLAG = 0 and t.REFERENCE_ID = p.PURCHASE_ID) AS CONTACT_NAME,
(select p.PURCHASE_DUE_DATE from purchase AS p where p.DELETE_FLAG = 0 and t.REFERENCE_ID = p.PURCHASE_ID) AS DUE_ON,
(select cr.CURRENCY_SYMBOL from currency AS cr JOIN bank_account AS ba ON ba.BANK_ACCOUNT_CURRENCY_CODE = cr.CURRENCY_CODE WHERE t.BANK_ACCOUNT_ID = ba.BANK_ACCOUNT_ID) AS CURRENCY_SYMBOL
from transacton t where t.DELETE_FLAG = 0 AND t.REFERENCE_TYPE = 2
union
select t.TRANSACTION_ID AS TRANSACTION_ID,t.CURRENT_BALANCE AS CURRENT_BALANCE,t.DEBIT_CREDIT_FLAG AS DEBIT_CREDIT_FLAG,t.ENTRY_TYPE AS ENTRY_TYPE,t.REFERENCE_ID AS REFERENCE_ID,t.REFERENCE_TYPE AS REFERENCE_TYPE,t.TRANSACTION_AMOUNT AS TRANSACTION_AMOUNT,t.TRANSACTION_DATE AS TRANSACTION_DATE,t.TRANSACTION_DESCRIPTION AS TRANSACTION_DESCRIPTION,t.BANK_ACCOUNT_ID AS BANK_ACCOUNT_ID,t.PARENT_TRANSACTION AS PARENT_TRANSACTION,
(select tc.TRANSACTION_CATEGORY_NAME from transaction_category tc where tc.DELETE_FLAG = 0 and t.EXPLAINED_TRANSACTION_CATEGORY_CODE = tc.TRANSACTION_CATEGORY_ID) AS TRANSACTION_CATEGORY_NAME,
(select tt.TRANSACTION_TYPE_NAME from transaction_type tt where tt.DELETE_FLAG = 0 and t.TRANSACTION_TYPE_CODE = tt.TRANSACTION_TYPE_CODE) AS TRANSACTION_TYPE_NAME,
(select es.EXPLANATION_STATUS_CODE from explanation_status es where es.DELETE_FLAG = 0 and t.EXPLANATION_STATUS_CODE = es.EXPLANATION_STATUS_CODE) AS EXPLANATION_STATUS_CODE,
(select es.EXPLANATION_STATUS_NAME from explanation_status es where es.DELETE_FLAG = 0 and t.EXPLANATION_STATUS_CODE = es.EXPLANATION_STATUS_CODE) AS EXPLANATION_STATUS_NAME,
null,
null,
null,
null,
(select cr.CURRENCY_SYMBOL from currency AS cr JOIN bank_account AS ba ON ba.BANK_ACCOUNT_CURRENCY_CODE = cr.CURRENCY_CODE WHERE t.BANK_ACCOUNT_ID = ba.BANK_ACCOUNT_ID) AS CURRENCY_SYMBOL
from transacton t where t.DELETE_FLAG = 0 and t.TRANSACTION_ID NOT IN (select t.TRANSACTION_ID from transacton t where t.DELETE_FLAG = 0 and t.REFERENCE_TYPE = 2) and 
t.TRANSACTION_ID NOT IN (select t.TRANSACTION_ID from transacton t where t.DELETE_FLAG = 0 and t.REFERENCE_TYPE = 1)